{"version":3,"file":"static/js/191.45e05134.chunk.js","mappings":"4HAEA,IAAeA,IAAAA,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,6CACTC,QAAS,CACP,eAAgB,uB,8DCWdC,EAAkB,IAdlBC,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAWH,OAXGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,cAAAA,MACJ,SAAYC,EAAeC,GACzB,OAAOP,EAAAA,EAAAA,IAAA,wBAA+CO,GAAW,CAC/DJ,QAAS,CAAEK,cAAeF,OAE7B,yBAED,SAAYA,EAAeG,GACzB,OAAOT,EAAAA,EAAAA,KAA+C,iBAAkBS,EAAM,CAC5EN,QAAS,CAAEK,cAAeF,SAE7B,EAXGD,IAeN","sources":["services/axios.ts","services/messages-service.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://quicktalk.andreiv03.vercel.app/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});","import axios from \"./axios\";\r\nimport type { MessageInterface } from \"../interfaces/messages-interface\";\r\n\r\nclass MessagesService {\r\n  getMessages(token: string, channel: string) {\r\n    return axios.get<MessageInterface[]>(`/messages/get/${channel}`, {\r\n      headers: { authorization: token }\r\n    });\r\n  }\r\n  \r\n  postMessage(token: string, data: Omit<MessageInterface, \"_id\" | \"createdAt\">) {\r\n    return axios.post<{ _id: string, createdAt: string }>(\"/messages/post\", data, {\r\n      headers: { authorization: token }\r\n    });\r\n  }\r\n};\r\n\r\nconst messagesService = new MessagesService();\r\nexport default messagesService;"],"names":["axios","withCredentials","baseURL","headers","messagesService","MessagesService","token","channel","authorization","data"],"sourceRoot":""}